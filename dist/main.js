(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),i=t(645),a=t.n(i),s=t(667),A=t.n(s),d=new URL(t(563),t.b),l=a()(r());l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap);"]);var c=A()(d);l.push([n.id,":root {\n  --blue: #43bee5;\n  --pink: #f40058;\n  --yellow: #efa500;\n  --green: #41b853;\n  --white: #efefef;\n  --gray: #e9e9e9;\n  --darkblue: #161b40;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n  font-family: Lato, serif;\n  font-size: 12px;\n  color: var(--pink);\n}\n\nbody {\n  width: 100vw;\n  background-color: #edf1f1;\n  background-image: url("+c+");\n}\n\n.todo-lists {\n  margin: 5rem auto;\n  padding: 2rem;\n  box-shadow: 5px 5px 5px 5px #000;\n  width: 50%;\n  background-color: var(--darkblue);\n}\n\n@media screen and (max-width: 540px) {\n  .todo-lists {\n    min-width: 95%;\n    margin: 2rem auto;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .todo-lists {\n    width: 80%;\n  }\n}\n\n@media screen and (max-width: 992px) {\n  .todo-lists {\n    width: 70%;\n  }\n}\n\n@media screen and (max-width: 992px) {\n  .todo-lists {\n    width: 70%;\n  }\n}\n\n@media screen and (max-width: 1200px) {\n  .todo-lists {\n    width: 60%;\n  }\n}\n\n.todo-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 0 1rem 1rem;\n}\n\n.todo-list-title {\n  font-size: 2rem;\n}\n\n.bi {\n  font-size: 2.8rem;\n  color: #555;\n}\n\n.btn-refresh {\n  transition: all 2s;\n}\n\n.btn-refresh:hover,\n.btn-refresh:active {\n  -moz-transform: rotate(360deg);\n  transform: rotate(360deg);\n}\n\n.bi-arrow-repeat {\n  color: #559089;\n  -moz-transition: all 0.5s;\n  transition: all 0.5s;\n}\n\n.bi-arrow-repeat:hover,\n.bi-arrow-repeat:focus,\n.bi-arrow-repeat:active{\n  color: var(--pink);\n}\n\n#todo-input {\n  padding: 1.2rem 1rem;\n  margin: 0.3rem 0;\n  border: 2px solid #333;\n  border-radius: 5px;\n  outline: none;\n  font-size: 1.5rem;\n  font-style: italic;\n  background-color: #272b42;\n  min-width: 100%;\n  color: var(--gray);\n}\n\n#todo-input:hover {\n  border-bottom: 3px solid var(--pink);\n}\n\n#todo-input::placeholder {\n  color: var(--gray);\n}\n\n.row-elements {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 0.5px solid #555;\n  padding: 0.5rem 1rem;\n}\n\ni {\n  background-color: var(--darkblue);\n}\n\n.todo-list-row {\n  position: relative;\n}\n\n.todo-list-row:hover,\n.todo-list-row:active,\n.todo-list-row:hover i,\n.todo-list-row:active i {\n  background-color: rgb(4, 19, 39);\n  color: var(--gray);\n}\n\n.todo-list-row:active {\n  color: var(--green);\n}\n\n.todo-left {\n  display: flex;\n  align-items: center;\n  max-width: 80%;\n}\n\n.description {\n  padding: 1rem 0.5rem;\n  margin-left: 2rem;\n  font-size: 1.5rem;\n  color: var(--blue);\n  max-width: 100%;\n  overflow-wrap: break-word;\n}\n\n.strike-through {\n  text-decoration: var(--green) line-through;\n  font-style: italic;\n  color: var(--pink);\n}\n\n.todo-list-holder button {\n  align-self: flex-end;\n}\n\n.btn {\n  outline: none;\n  width: auto;\n  border: none;\n  cursor: pointer;\n  background: var(--darkblue);\n}\n\n.btn-delete {\n  display: none;\n  position: absolute;\n  right: 0;\n}\n\n.btn-clear {\n  width: 100%;\n  font-size: 1.7rem;\n  font-weight: 400;\n  border-top: 0.5px solid #bfcaca;\n  padding-top: 2rem;\n  color: #555;\n  background-color: var(--darkblue);\n}\n\n.btn-edit {\n  position: absolute;\n  right: 0;\n}\n\n.btn-clear:hover {\n  color: var(--blue);\n}\n\n.row-bg {\n  background: rgb(226, 223, 197);\n}\n\n.over {\n  background: #e9e9e9;\n}\n\n.todo-list-row:first-child {\n  border-top: none;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,eAAe;EACf,eAAe;EACf,iBAAiB;EACjB,gBAAgB;EAChB,gBAAgB;EAChB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;;;EAGE,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,wBAAwB;EACxB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,yBAAyB;EACzB,yDAAoC;AACtC;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,gCAAgC;EAChC,UAAU;EACV,iCAAiC;AACnC;;AAEA;EACE;IACE,cAAc;IACd,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,UAAU;EACZ;AACF;;AAEA;EACE;IACE,UAAU;EACZ;AACF;;AAEA;EACE;IACE,UAAU;EACZ;AACF;;AAEA;EACE;IACE,UAAU;EACZ;AACF;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,yBAAyB;AAC3B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,WAAW;AACb;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,8BAA8B;EAC9B,yBAAyB;AAC3B;;AAEA;EACE,cAAc;EACd,yBAAyB;EACzB,oBAAoB;AACtB;;AAEA;;;EAGE,kBAAkB;AACpB;;AAEA;EACE,oBAAoB;EACpB,gBAAgB;EAChB,sBAAsB;EACtB,kBAAkB;EAClB,aAAa;EACb,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB;EACzB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,4BAA4B;EAC5B,oBAAoB;AACtB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;;;EAIE,gCAAgC;EAChC,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,cAAc;AAChB;;AAEA;EACE,oBAAoB;EACpB,iBAAiB;EACjB,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;EACf,yBAAyB;AAC3B;;AAEA;EACE,0CAA0C;EAC1C,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,eAAe;EACf,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,gBAAgB;EAChB,+BAA+B;EAC/B,iBAAiB;EACjB,WAAW;EACX,iCAAiC;AACnC;;AAEA;EACE,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap");\n\n:root {\n  --blue: #43bee5;\n  --pink: #f40058;\n  --yellow: #efa500;\n  --green: #41b853;\n  --white: #efefef;\n  --gray: #e9e9e9;\n  --darkblue: #161b40;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n  font-family: Lato, serif;\n  font-size: 12px;\n  color: var(--pink);\n}\n\nbody {\n  width: 100vw;\n  background-color: #edf1f1;\n  background-image: url("img/bg.jpeg");\n}\n\n.todo-lists {\n  margin: 5rem auto;\n  padding: 2rem;\n  box-shadow: 5px 5px 5px 5px #000;\n  width: 50%;\n  background-color: var(--darkblue);\n}\n\n@media screen and (max-width: 540px) {\n  .todo-lists {\n    min-width: 95%;\n    margin: 2rem auto;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .todo-lists {\n    width: 80%;\n  }\n}\n\n@media screen and (max-width: 992px) {\n  .todo-lists {\n    width: 70%;\n  }\n}\n\n@media screen and (max-width: 992px) {\n  .todo-lists {\n    width: 70%;\n  }\n}\n\n@media screen and (max-width: 1200px) {\n  .todo-lists {\n    width: 60%;\n  }\n}\n\n.todo-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 0 1rem 1rem;\n}\n\n.todo-list-title {\n  font-size: 2rem;\n}\n\n.bi {\n  font-size: 2.8rem;\n  color: #555;\n}\n\n.btn-refresh {\n  transition: all 2s;\n}\n\n.btn-refresh:hover,\n.btn-refresh:active {\n  -moz-transform: rotate(360deg);\n  transform: rotate(360deg);\n}\n\n.bi-arrow-repeat {\n  color: #559089;\n  -moz-transition: all 0.5s;\n  transition: all 0.5s;\n}\n\n.bi-arrow-repeat:hover,\n.bi-arrow-repeat:focus,\n.bi-arrow-repeat:active{\n  color: var(--pink);\n}\n\n#todo-input {\n  padding: 1.2rem 1rem;\n  margin: 0.3rem 0;\n  border: 2px solid #333;\n  border-radius: 5px;\n  outline: none;\n  font-size: 1.5rem;\n  font-style: italic;\n  background-color: #272b42;\n  min-width: 100%;\n  color: var(--gray);\n}\n\n#todo-input:hover {\n  border-bottom: 3px solid var(--pink);\n}\n\n#todo-input::placeholder {\n  color: var(--gray);\n}\n\n.row-elements {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 0.5px solid #555;\n  padding: 0.5rem 1rem;\n}\n\ni {\n  background-color: var(--darkblue);\n}\n\n.todo-list-row {\n  position: relative;\n}\n\n.todo-list-row:hover,\n.todo-list-row:active,\n.todo-list-row:hover i,\n.todo-list-row:active i {\n  background-color: rgb(4, 19, 39);\n  color: var(--gray);\n}\n\n.todo-list-row:active {\n  color: var(--green);\n}\n\n.todo-left {\n  display: flex;\n  align-items: center;\n  max-width: 80%;\n}\n\n.description {\n  padding: 1rem 0.5rem;\n  margin-left: 2rem;\n  font-size: 1.5rem;\n  color: var(--blue);\n  max-width: 100%;\n  overflow-wrap: break-word;\n}\n\n.strike-through {\n  text-decoration: var(--green) line-through;\n  font-style: italic;\n  color: var(--pink);\n}\n\n.todo-list-holder button {\n  align-self: flex-end;\n}\n\n.btn {\n  outline: none;\n  width: auto;\n  border: none;\n  cursor: pointer;\n  background: var(--darkblue);\n}\n\n.btn-delete {\n  display: none;\n  position: absolute;\n  right: 0;\n}\n\n.btn-clear {\n  width: 100%;\n  font-size: 1.7rem;\n  font-weight: 400;\n  border-top: 0.5px solid #bfcaca;\n  padding-top: 2rem;\n  color: #555;\n  background-color: var(--darkblue);\n}\n\n.btn-edit {\n  position: absolute;\n  right: 0;\n}\n\n.btn-clear:hover {\n  color: var(--blue);\n}\n\n.row-bg {\n  background: rgb(226, 223, 197);\n}\n\n.over {\n  background: #e9e9e9;\n}\n\n.todo-list-row:first-child {\n  border-top: none;\n}\n'],sourceRoot:""}]);const p=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],d=o.base?A[0]+o.base:A[0],l=i[d]||0,c="".concat(d," ").concat(l);i[d]=l+1;var p=t(c),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=s,e.splice(s,0,{identifier:c,updater:m,references:1})}a.push(c)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var A=o(n,r),d=0;d<i.length;d++){var l=t(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},563:(n,e,t)=>{n.exports=t.p+"ab922f8145f39d9cf82b.jpeg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),a=t.n(i),s=t(565),A=t.n(s),d=t(216),l=t.n(d),c=t(589),p=t.n(c),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const h=document.querySelector("#todo-input"),E=(document.querySelector(".btn-clear"),document.getElementsByClassName("status"),document.querySelector(".todo-lists-holder")),b=(document.getElementsByClassName("btn-edit"),document.getElementsByClassName("btn-delete"),document.getElementsByTagName("form")[0]);document.querySelector(".btn-refresh");const g=new class{constructor(){this.index=0,this.completed=!1,this.description="",this.todos=[]}addTodo(){this.description=h.value,this.index=this.todos.length,this.todos.push({index:this.index,description:this.description,completed:this.completed}),this.storeTodo()}readTodo(){const n=JSON.parse(localStorage.getItem("todos"));return this.todos=n||[],this.todos}clearCompleted(){this.todos=this.todos.filter((n=>!0!==n.completed)),this.arrangeIndex(),this.storeTodo()}removeTodo(n){return this.todos=this.todos.filter((e=>e.index!==Number(n))),this.arrangeIndex(),this.storeTodo(),this.todos}storeTodo(){localStorage.setItem("todos",JSON.stringify(this.todos))}arrangeIndex(){this.todos.forEach(((n,e)=>{n.index=e}))}changeStatus(n,e){this.todos[Number(n)].completed=e,this.storeTodo()}updateDescription(n,e){this.todos[Number(e)].description=n,this.storeTodo()}swapTodos(n,e){const t=this.todos[n],o=this.todos[e];t.index=e,o.index=n,this.todos[e]=t,this.todos[n]=o,this.storeTodo()}};function C(){const n=g.readTodo();(()=>{let n=E.firstChild;for(;n;)E.removeChild(n),n=E.firstChild})(),n.forEach((n=>{(n=>{const e=(n=>{const e=document.createElement("div"),t=document.createElement("input"),o=document.createElement("p"),r=document.createElement("button"),i=document.createElement("i"),a=document.createElement("button"),s=document.createElement("i"),A=document.createElement("div"),d=document.createElement("div"),l=["todo-left","status","description","btn","bi","btn","bi","row-elements","todo-list-row"];return[e,t,o,r,i,a,s,A,d].forEach(((n,e)=>{n.classList.add(l[e])})),r.classList.add("btn-edit"),a.classList.add("btn-delete"),i.classList.add("bi-three-dots-vertical"),s.classList.add("bi-trash"),n.completed?o.classList.add("strike-through"):o.classList.remove("strike-through"),o.innerText=n.description,t.setAttribute("type","checkbox"),t.setAttribute("id",`input-${n.index}`),n.completed?t.checked=!0:t.checked=!1,e.appendChild(t),e.appendChild(o),r.appendChild(i),a.appendChild(s),A.appendChild(e),A.appendChild(r),A.appendChild(a),A.setAttribute("id",n.index),A.draggable=!0,d.appendChild(A),d.setAttribute("data-id",n.index),d})(n);E.appendChild(e)})(n)}))}C();const f=(n,e,t)=>{document.addEventListener(n,(n=>{n.target.matches(e)&&t(n)}))};let B;f("keypress","#todo-input",(n=>{"Enter"===n.key&&""!==n.target.value&&(g.addTodo(),C(),n.preventDefault(),b.reset())})),f("click",".btn-clear",(()=>{g.clearCompleted(),C()})),f("change",".status",(n=>{const e=n.target.id.split("-")[1];g.changeStatus(e,n.target.checked);const{parentNode:t}=n.target;t.querySelector(".description").classList.toggle("strike-through")})),f("click",".bi-three-dots-vertical",(n=>{const{parentNode:e}=n.target.parentNode,t=e.getElementsByClassName("btn-delete")[0],o=e.querySelector(".btn-edit");e.querySelector(".description").contentEditable=!0,o.style.display="none",t.style.display="block"})),f("click",".bi-trash",(n=>{const{parentNode:e}=n.target.parentNode,{id:t}=e;g.removeTodo(t),C()})),f("click",".bi-arrow-repeat",(()=>{C()})),f("dragstart",".row-elements",(n=>{B=Number(n.target.closest("div").getAttribute("id"))})),f("dragover",".row-elements",(n=>{n.preventDefault()})),f("drop",".row-elements",(n=>{const e=+n.target.parentNode.getAttribute("data-id");var t,o;t=B,o=e,g.swapTodos(t,o),C(),n.target.classList.remove("over")})),f("dragenter",".row-elements",(n=>{n.target.classList.add("over")})),f("dragleave",".row-elements",(n=>{n.target.classList.remove("over")})),f("mouseover",".bi-three-dots-vertical",(n=>{n.target.style.color="#43bee5"})),f("mouseout",".bi-three-dots-vertical",(n=>{n.target.style.color="#555"})),f("mouseover",".bi-trash",(n=>{n.target.style.color="#770000"})),document.querySelectorAll(".description").forEach(((n,e)=>{if(n.contentEditable){n.classList.add("editable");const{id:t}=n.parentNode;let{innerText:o}=n.parentNode.querySelector(".status");n.addEventListener("input",(()=>{o=n.innerText,setTimeout((()=>{const r=document.querySelectorAll(".btn-delete"),i=document.querySelectorAll(".btn-edit");g.updateDescription(o,t),r[e].style.display="none",i[e].style.display="block",n.contentEditable=!1}),5e3)})),n.addEventListener("keypress",(e=>{"Enter"===e.key&&(n.contentEditable=!1,o=o.substring(0,o.length-1),g.updateDescription(o,t))}))}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,