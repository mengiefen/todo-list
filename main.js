(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>p});var o=t(537),r=t.n(o),i=t(645),a=t.n(i),s=t(667),d=t.n(s),c=new URL(t(697),t.b),A=a()(r());A.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap);"]);var l=d()(c);A.push([e.id,"* {\n  margin: 0;\n  padding: 0;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n  font-family: Lato, serif;\n  font-size: 12px;\n}\n\nbody {\n  width: 100vw;\n  background-color: #edf1f1;\n  background-image: url("+l+");\n}\n\n.todo-lists {\n  background-color: #e7e5eb;\n  margin: 5rem auto;\n  padding: 2rem;\n  box-shadow: 5px 5px 5px 5px #bfcaca;\n  width: 50%;\n}\n\n@media screen and (max-width: 540px) {\n  .todo-lists {\n    min-width: 95%;\n    margin: 2rem auto;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .todo-lists {\n    width: 80%;\n  }\n}\n\n@media screen and (max-width: 992px) {\n  .todo-lists {\n    width: 70%;\n  }\n}\n\n@media screen and (max-width: 992px) {\n  .todo-lists {\n    width: 70%;\n  }\n}\n\n@media screen and (max-width: 1200px) {\n  .todo-lists {\n    width: 60%;\n  }\n}\n\n.todo-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  border-bottom: 0.5px solid #bfcaca;\n}\n\n.todo-list-title {\n  font-size: 2rem;\n}\n\n.bi {\n  font-size: 2.8rem;\n  color: #555;\n}\n\n#todo-input {\n  padding: 2rem 1rem;\n  border: none;\n  outline: none;\n  font-size: 1.4rem;\n  font-style: italic;\n  background-color: #e7e5eb;\n}\n\n.row-elements {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 0.5px solid #acb3b3;\n  padding: 0.5rem 1rem;\n}\n\ni {\n  background-color: #e7e5eb;\n}\n\n.todo-list-row:hover,\n.todo-list-row:active,\n.todo-list-row:hover i,\n.todo-list-row:active i {\n  background-color: #dfdbe5;\n}\n\n.todo-list-row:active {\n  font-weight: 700;\n}\n\n.todo-left {\n  display: flex;\n  align-items: center;\n}\n\n.strike-through {\n  text-decoration: line-through;\n  font-style: italic;\n  color: rgb(28, 28, 77);\n}\n\n.description {\n  padding: 1rem 0.5rem;\n  margin-left: 2rem;\n  font-size: 1.5rem;\n}\n\n.todo-list-holder button {\n  align-self: flex-end;\n}\n\n.btn {\n  outline: none;\n  width: auto;\n  border: none;\n  background: white;\n  cursor: pointer;\n}\n\n.btn-delete {\n  display: none;\n}\n\n.btn-clear {\n  background-color: #e7e5eb;\n  width: 100%;\n  font-size: 1.7rem;\n  font-weight: 400;\n  border-top: 0.5px solid #bfcaca;\n  padding-top: 2rem;\n  color: #555;\n}\n\n.btn-clear:hover {\n  color: black;\n}\n\n.row-bg {\n  background: rgb(226, 223, 197);\n}\n\n.over {\n  background: #e9e9e9;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;;;EAGE,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,wBAAwB;EACxB,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,yBAAyB;EACzB,yDAAiO;AACnO;;AAEA;EACE,yBAAyB;EACzB,iBAAiB;EACjB,aAAa;EACb,mCAAmC;EACnC,UAAU;AACZ;;AAEA;EACE;IACE,cAAc;IACd,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,UAAU;EACZ;AACF;;AAEA;EACE;IACE,UAAU;EACZ;AACF;;AAEA;EACE;IACE,UAAU;EACZ;AACF;;AAEA;EACE;IACE,UAAU;EACZ;AACF;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,aAAa;EACb,kCAAkC;AACpC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,+BAA+B;EAC/B,oBAAoB;AACtB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;;;;EAIE,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,6BAA6B;EAC7B,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,oBAAoB;EACpB,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,iBAAiB;EACjB,gBAAgB;EAChB,+BAA+B;EAC/B,iBAAiB;EACjB,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;AACrB",sourcesContent:["@import url(\"https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap\");\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n  font-family: Lato, serif;\n  font-size: 12px;\n}\n\nbody {\n  width: 100vw;\n  background-color: #edf1f1;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3E%3Cpath fill='%232b7a78' fill-opacity='0.4' d='M1 3h1v1H1V3zm2-2h1v1H3V1z'%3E%3C/path%3E%3C/svg%3E\");\n}\n\n.todo-lists {\n  background-color: #e7e5eb;\n  margin: 5rem auto;\n  padding: 2rem;\n  box-shadow: 5px 5px 5px 5px #bfcaca;\n  width: 50%;\n}\n\n@media screen and (max-width: 540px) {\n  .todo-lists {\n    min-width: 95%;\n    margin: 2rem auto;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .todo-lists {\n    width: 80%;\n  }\n}\n\n@media screen and (max-width: 992px) {\n  .todo-lists {\n    width: 70%;\n  }\n}\n\n@media screen and (max-width: 992px) {\n  .todo-lists {\n    width: 70%;\n  }\n}\n\n@media screen and (max-width: 1200px) {\n  .todo-lists {\n    width: 60%;\n  }\n}\n\n.todo-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  border-bottom: 0.5px solid #bfcaca;\n}\n\n.todo-list-title {\n  font-size: 2rem;\n}\n\n.bi {\n  font-size: 2.8rem;\n  color: #555;\n}\n\n#todo-input {\n  padding: 2rem 1rem;\n  border: none;\n  outline: none;\n  font-size: 1.4rem;\n  font-style: italic;\n  background-color: #e7e5eb;\n}\n\n.row-elements {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 0.5px solid #acb3b3;\n  padding: 0.5rem 1rem;\n}\n\ni {\n  background-color: #e7e5eb;\n}\n\n.todo-list-row:hover,\n.todo-list-row:active,\n.todo-list-row:hover i,\n.todo-list-row:active i {\n  background-color: #dfdbe5;\n}\n\n.todo-list-row:active {\n  font-weight: 700;\n}\n\n.todo-left {\n  display: flex;\n  align-items: center;\n}\n\n.strike-through {\n  text-decoration: line-through;\n  font-style: italic;\n  color: rgb(28, 28, 77);\n}\n\n.description {\n  padding: 1rem 0.5rem;\n  margin-left: 2rem;\n  font-size: 1.5rem;\n}\n\n.todo-list-holder button {\n  align-self: flex-end;\n}\n\n.btn {\n  outline: none;\n  width: auto;\n  border: none;\n  background: white;\n  cursor: pointer;\n}\n\n.btn-delete {\n  display: none;\n}\n\n.btn-clear {\n  background-color: #e7e5eb;\n  width: 100%;\n  font-size: 1.7rem;\n  font-weight: 400;\n  border-top: 0.5px solid #bfcaca;\n  padding-top: 2rem;\n  color: #555;\n}\n\n.btn-clear:hover {\n  color: black;\n}\n\n.row-bg {\n  background: rgb(226, 223, 197);\n}\n\n.over {\n  background: #e9e9e9;\n}\n"],sourceRoot:""}]);const p=A},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(a[d]=!0)}for(var c=0;c<e.length;c++){var A=[].concat(e[c]);o&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),n.push(A))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],s=0;s<e.length;s++){var d=e[s],c=o.base?d[0]+o.base:d[0],A=i[c]||0,l="".concat(c," ").concat(A);i[c]=A+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=r(u,o);o.byIndex=s,n.splice(s,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=t(i[a]);n[s].references--}for(var d=o(e,r),c=0;c<i.length;c++){var A=t(i[c]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}i=d}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},697:e=>{e.exports="data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%274%27 height=%274%27 viewBox=%270 0 4 4%27%3E%3Cpath fill=%27%232b7a78%27 fill-opacity=%270.4%27 d=%27M1 3h1v1H1V3zm2-2h1v1H3V1z%27%3E%3C/path%3E%3C/svg%3E"}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.b=document.baseURI||self.location.href,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),i=t(569),a=t.n(i),s=t(565),d=t.n(s),c=t(216),A=t.n(c),l=t(589),p=t.n(l),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const h=document.querySelector("#todo-input"),E=document.querySelector(".btn-clear"),f=document.getElementsByClassName("status"),b=document.querySelector(".todo-lists-holder"),g=document.getElementsByClassName("btn-edit"),C=document.getElementsByClassName("btn-delete"),B=document.getElementsByTagName("form")[0],v=document.querySelector(".btn-refresh"),y=new class{constructor(){this.index=0,this.completed=!1,this.description="",this.todos=[]}addTodo(){this.description=h.value,this.index=this.todos.length,this.todos.push({index:this.index,description:this.description,completed:this.completed}),this.storeTodo()}readTodo(){const e=JSON.parse(localStorage.getItem("todos"));return this.todos=e||[],this.todos}clearCompleted(){this.todos=this.todos.filter((e=>!0!==e.completed)),this.arrangeIndex(),this.storeTodo()}removeTodo(e){return this.todos=this.todos.filter((n=>n.index!==Number(e))),this.arrangeIndex(),this.storeTodo(),this.todos}storeTodo(){localStorage.setItem("todos",JSON.stringify(this.todos))}arrangeIndex(){this.todos.forEach(((e,n)=>{e.index=n}))}changeStatus(e,n){this.todos[Number(e)].completed=n,this.storeTodo()}updateDescription(e,n){this.todos[Number(n)].description=e,this.storeTodo()}swapTodos(e,n){const t=this.todos[e],o=this.todos[n];t.index=n,o.index=e,this.todos[n]=t,this.todos[e]=o,this.storeTodo()}};function x(){const e=y.readTodo();(()=>{let e=b.firstChild;for(;e;)b.removeChild(e),e=b.firstChild})(),e.forEach((e=>{(e=>{const n=(e=>{const n=document.createElement("div"),t=document.createElement("input"),o=document.createElement("p"),r=document.createElement("button"),i=document.createElement("i"),a=document.createElement("button"),s=document.createElement("i"),d=document.createElement("div"),c=document.createElement("div"),A=["todo-left","status","description","btn","bi","btn","bi","row-elements","todo-list-row"];return[n,t,o,r,i,a,s,d,c].forEach(((e,n)=>{e.classList.add(A[n])})),r.classList.add("btn-edit"),a.classList.add("btn-delete"),i.classList.add("bi-three-dots-vertical"),s.classList.add("bi-trash"),e.completed?o.classList.add("strike-through"):o.classList.remove("strike-through"),o.innerText=e.description,t.setAttribute("type","checkbox"),t.setAttribute("id",`input-${e.index}`),e.completed?t.checked=!0:t.checked=!1,n.appendChild(t),n.appendChild(o),r.appendChild(i),a.appendChild(s),d.appendChild(n),d.appendChild(r),d.appendChild(a),d.setAttribute("id",e.index),d.draggable=!0,c.appendChild(d),c.setAttribute("data-id",e.index),c})(e);b.appendChild(n)})(e)}))}x(),h.addEventListener("keypress",(e=>{"Enter"===e.key&&""!==h.value&&(y.addTodo(),x(),e.preventDefault(),B.reset())})),E.addEventListener("click",(()=>{y.clearCompleted(),x()}));for(let e=0;e<f.length;e+=1)f[e].addEventListener("change",(e=>{const n=e.target.id.split("-")[1];y.changeStatus(n,e.target.checked);const{parentNode:t}=e.target;t.querySelector(".description").classList.toggle("strike-through")}));for(let e=0;e<g.length;e+=1)g[e].addEventListener("click",(n=>{const{parentNode:t}=n.target.parentNode,o=t.getElementsByClassName("btn-delete")[0];t.querySelector(".description").contentEditable=!0,g[e].style.display="none",o.style.display="block"}));document.querySelectorAll(".description").forEach(((e,n)=>{if(e.contentEditable){e.classList.add("editable");const{id:t}=e.parentNode;let{innerText:o}=e.parentNode.querySelector(".status");e.addEventListener("input",(()=>{o=e.innerText,setTimeout((()=>{const r=document.querySelectorAll(".btn-delete"),i=document.querySelectorAll(".btn-edit");y.updateDescription(o,t),r[n].style.display="none",i[n].style.display="block",e.contentEditable=!1}),5e3)})),e.addEventListener("keypress",(n=>{"Enter"===n.key&&(e.contentEditable=!1,o=o.substring(0,o.length-1),y.updateDescription(o,t))}))}}));for(let e=0;e<C.length;e+=1)C[e]&&C[e].addEventListener("click",(e=>{const{parentNode:n}=e.target.parentNode,{id:t}=n;y.removeTodo(t),x()}));let w;function k(){w=Number(this.closest("div").getAttribute("id"))}function L(e){e.preventDefault()}function T(){const e=+this.getAttribute("data-id");var n,t;n=w,t=e,y.swapTodos(n,t),x(),this.classList.remove("over")}function S(){this.classList.remove("over")}function N(){this.classList.add("over")}v.addEventListener("click",(()=>{window.location.reload()}));const j=document.querySelectorAll(".row-elements"),z=document.querySelectorAll(".todo-list-row");j.forEach((e=>{e.addEventListener("dragstart",k)})),z.forEach((e=>{e.addEventListener("dragover",L),e.addEventListener("drop",T),e.addEventListener("dragenter",N),e.addEventListener("dragleave",S)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,